#!/bin/bash

set -x
set -e

export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
export DBLATEX=no
export DOCBOOK2X_MAN=no
export DOCBOOK2MAN=no
export DB2X_DOCBOOK2MAN=no

do_run() {
  make clean
  make
  sudo make install
  sudo ldconfig
}

apt_depends() {
    cmd=$1
    apt-get $cmd -y docbook2x docbook-utils libgmp-dev libreadline-dev \
    autoconf build-essential gcc make autoconf automake \
    libjansson-dev pkg-config zlib1g-dev curl libtool \
    docbook2x docbook-utils bison flex
}

# Try installing the dependencies
if [[ "prepare" == $1 ]]; then
  if [[ "`whoam`" != "root" ]]; then
    echo "Error please rerun with root privileges for installing dependencies."
    exit 1
  fi
  if apt-get update >/dev/null; then
    # cmd can be used to trim container sizes by removing packages.
    cmd=${2:-install}
    apt_depends $cmd
  elif dnf update >/dev/null; then
    dnf install -y autogen autoconf automake libtool flex bison
    dnf install -y gmp-devel readline-devel docbook2X systemd
  else
    echo "Error unsupported"
  fi
  exit
elif [[ "local" == $1 ]]; then
  do_run
  exit
fi

set -x
set -e

src=~/src/netfilter.org
mkdir -pv $src
cd $src

for project in libmnl libnftnl nftables iptables
do
  # Want to verify what is in use
  if [[ "show" == $1 ]]; then
    git -C $project ll
    git -C $project branch -v -v
    continue
  fi

  if [ -d "$src/$project" ]; then
    git -C $project stash
    git -C $project checkout master
    git -C $project fetch --all
    git -C $project pull
    cd $project
    sh autogen.sh
    if [[ $project == "libnftnl" ]]
    then
      ./configure --with-json-parsing
    else
      ./configure
    fi
    do_run
    cd $src
  else
    git clone git://git.netfilter.org/$project
  fi
done
